<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="
	    http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
        http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket.xsd">


	<!-- ○ Annotation 활성화 -->
	<mvc:annotation-driven />

	<!-- ○ 『/』 매핑에서 정적 리소스(html, css, js 등)를 처리할 수 있도록 설정 -->
	<!--    → 각 WAS는 서블릿 매핑에 존재하지 않는 요청을 처리하기 위한 --> 
	<!--       default-servlet 을 제공하고 있다. -->
	<!--    → Controller 의 @RequestMapping 에 등록되지 않은 요청이나 -->
	<!--       JSP 에 대한 요청을 처리하는 것이 default-servlet 이다. -->
	<!--    → web.xml 을 설정하는 과정에서 -->
	<!--       DispatcherServlet 의 매핑 URL 패턴을 『"/"』로 지정하면 -->
	<!--       JSP 를 제외한 모든 요청이 DispatcherServlet 으로 가기 때문에 -->
	<!--       WAS 가 제공하는 default-servlet 이  -->
	<!--       『*.html』이나 『*.css』와 같은 요청을 처리할 수 없게 된다. -->
	<!--    → default-servlet-handler 는 바로 이 default-servlet 에 -->
	<!--       요청을 전달해주는 핸들로러서, -->
	<!--    → 요청 URL에 매핑되는 컨트롤러가 존재하지 않을 때 --> 
	<!--       404 응답대신, 디폴트 서블릿이 해당 요청 URL을 처리하도록 한다. --> 
	<!--       따라서, 『*.css』와 같은 컨트롤러에 매핑되어 있지 않은 URL 요청은 --> 
	<!--       최종적으로 디폴트 서블릿에 전달되어 처리된다. -->
	<mvc:default-servlet-handler />

	<!-- ○ Annotation 활성화 -->
	<!--    → 위 mvc:annotation-driven 과 동일한 기능을 갖고 있지만 -->
	<!--    → 이 방식의 장점 중 하나는 --> 
    <!--       @Autowired와 @Qualifier Annotation을 인식할 수 있다는 것이다. -->
	<context:component-scan base-package="com" />
	

	<!-- 로그인 인터셉터 -->
 	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/board/write"/>
			<mvc:mapping path="/commentupdate"/>
			<mvc:mapping path="/commentdelete"/>
			<mvc:mapping path="/commentwrite"/>
			<mvc:mapping path="/boardinsert"/>
			<mvc:mapping path="/adopt_form"/>
			<mvc:mapping path="/adopt_read"/>
			<mvc:mapping path="/adopt_write"/>
			<mvc:mapping path="/adopt_proc"/>
			<mvc:mapping path="/adopt_update_form"/>
			<mvc:mapping path="/adopt_update"/>
			<mvc:mapping path="/adopt/apply_form"/>
			<mvc:mapping path="/adopt/apply"/>
			<mvc:mapping path="/catregistrationform"/>
			<mvc:mapping path="/actregistration"/>
        	<bean class="com.straycat.interceptor.CommonInterceptor"/>
		</mvc:interceptor>
		<mvc:interceptor>
			<mvc:mapping path="/login"/>
			<mvc:mapping path="/join"/>
			<mvc:mapping path="/acceptterms"/>
			<bean class="com.straycat.interceptor.MemberInterceptor"/>
		</mvc:interceptor>
	</mvc:interceptors>

	<!-- 
	<mvc:annotation-driven>
		<mvc:argument-resolvers>
			<bean class="com.straycat.common.CustomMapArgumentResolver"></bean>		
		</mvc:argument-resolvers>
	</mvc:annotation-driven> -->

	


	<bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="order" value="1" />
		<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/views/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 
		<mvc:view-resolvers>
			<mvc:jsp prefix="/WEB-INF/view/" />
		</mvc:view-resolvers> 
	-->

	<!-- ○ 파일 업로드 -->
	
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 자바파일이 UTF-8로 저장된 경우 한글파일명이 깨지지 않게하기 위해
		10MB (=10 x 1024 x 1024) -->
		<property name="defaultEncoding" value="utf-8" />
		<property name="maxUploadSize" value="10485760" />
	</bean>
	
</beans>
